<project name="Kiama" basedir="." default="build">

  <!-- Global properties -->

  <property environment="env"/>

  <property name="svnscala.home" value="/Users/asloane/Projects/Scala/src/trunk/dists/latest"/>
  <property name="svnscalacheck.lib" value="/Users/asloane/Projects/ScalaCheck/src/trunk/dist/ScalaCheck-1.4dev.jar"/>

  <property name="stbscala.home" value="/sbaz"/>
  <property name="stbscalacheck.lib" value="${stbscala.home}/lib/scalacheck.jar"/>

  <!-- Use these to get the latest Scala compiler and the ScalaCheck libraries built with it. -->
  <!--
  <property name="scala.home" value="${svnscala.home}"/>
  <property name="scalacheck.lib" value="${svnscalacheck.lib}"/>
  -->
  
  <!-- Use these to get the latest release Scala compiler and ScalaCheck library. -->
  <property name="scala.home" value="${stbscala.home}"/>
  <property name="scalacheck.lib" value="${stbscalacheck.lib}"/>

  <property name="scala.lib" value="${scala.home}/lib/scala-library.jar"/>

  <path id="scala.classpath">
    <pathelement location="${scala.home}/lib/scala-compiler.jar"/>
    <pathelement location="${scala.lib}"/>
  </path>

  <path id="kiama.classpath">
    <pathelement location="${scalacheck.lib}"/>
    <pathelement location="${scala.lib}"/>
    <pathelement location="build"/>
  </path>

  <taskdef resource="scala/tools/ant/antlib.xml"
           classpathref="scala.classpath"/>


  <!-- Project properties -->

  <property name="name"          value="${ant.project.name}"/>
  <property name="version.nr"    value="0.1"/>
  <property name="version"       value="${version.nr}dev"/>
  <property name="author"        value="Anthony M Sloane"/>


  <!-- Targets -->

  <target name="prepare">
    <mkdir dir="build"/>
    <mkdir dir="dist"/>
    <mkdir dir="build/doc"/>
    <mkdir dir="build/doc/api"/>
    <mkdir dir="build/pkg"/>
    <mkdir dir="build/pkg/lib"/>
    <mkdir dir="build/pkg/doc"/>
    <mkdir dir="build/pkg/src"/>
  </target>

  <target name="clean">
    <delete dir="build"/>
    <delete dir="dist"/>
  </target>

  <target name="build" depends="prepare">
    <scalac addParams="-unchecked -deprecation" srcdir="src" destdir="build" classpathref="kiama.classpath"/>
  </target>

  <target name="tests" depends="build">
    <java classname="kiama.test.Tests"
          classpathref="kiama.classpath">
    </java>
  </target>

  <target name="doc" depends="prepare">
    <copy todir="build/doc">
      <fileset dir=".">
        <include name="LICENSE"/>
        <include name="RELEASE"/>
      </fileset>
    </copy>
    <scaladoc
      srcdir="src"
      destdir="build/doc/api"
      windowtitle="${name} ${version}"
      doctitle="${name} ${version}"
      addparams="-linksource"
      classpathref="kiama.classpath">
      <include name="**/*.scala"/>
    </scaladoc>
  </target>

  <target name="jar" depends="clean,build">
    <jar destfile="dist/${name}-${version}.jar">
      <fileset dir="build">
        <include name="kiama/**"/>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${author}"/>
        <attribute name="Export-Package" value='kiama;version="${version}"'/>
        <section name="kiama">
          <attribute name="Specification-Title"    value="${name}"/>
          <attribute name="Specification-Version"  value="${version}"/>
          <attribute name="Specification-Vendor"   value="${author}"/>
          <attribute name="Implementation-Title"   value="scalacheck"/>
          <attribute name="Implementation-Version" value="${version}"/>
          <attribute name="Implementation-Vendor"  value="${author}"/>
        </section>
      </manifest>
    </jar>
  </target>

  <target name="jar-src" depends="clean,build">
    <jar destfile="dist/${name}-${version}-src.jar">
      <fileset dir="src">
        <include name="kiama/**"/>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${author}"/>
        <section name="kiama">
          <attribute name="Specification-Title"    value="${name}"/>
          <attribute name="Specification-Version"  value="${version}"/>
          <attribute name="Specification-Vendor"   value="${author}"/>
          <attribute name="Implementation-Title"   value="kiama"/>
          <attribute name="Implementation-Version" value="${version}"/>
          <attribute name="Implementation-Vendor"  value="${author}"/>
        </section>
      </manifest>
    </jar>
  </target>

  <target name="dist" depends="jar,jar-src,doc">
    <copy file="dist/${name}-${version}.jar" tofile="build/pkg/lib/kiama.jar"/>
    <copy file="dist/${name}-${version}-src.jar" tofile="build/pkg/src/kiama-src.jar"/>
    <copy todir="build/pkg/doc">
      <fileset dir="build/doc"/>
    </copy>
    <exec executable="sbaz" failonerror="true">
      <arg value="pack"/>
      <arg value="kiama"/>
      <arg value="build/pkg"/>
      <arg value="--version"/>
      <arg value="${version}"/>
      <arg value="--outdir"/>
      <arg value="dist"/>
      <arg value="--linkbase"/>
      <arg value="http:://kiama"/>
      <arg value="--description"/>
      <arg value='Kiama is a Scala library for language processing using high-level specification techniques.'/>
    </exec>
    <move file="kiama-${version}.advert" todir="dist"/>
  </target>

  <target name="dist-release">
    <antcall target="dist">
      <param name="version" value="${version.nr}"/>
    </antcall>
  </target>

  <target name="install" depends="dist">
    <exec executable="sbaz" failonerror="true">
      <arg value="install"/>
      <arg value="-f"/>
      <arg value="dist/scalacheck-${version}.sbp"/>
    </exec>
  </target>

  <!-- Separate test targets -->
  
  <target name="lambda" depends="build">
    <java classname="kiama.example.Lambda"
          classpathref="kiama.classpath">
      <arg value="src/kiama/example/Lambda.input"/>
    </java>
  </target>
  
  <target name="normal" depends="build">
    <java classname="kiama.example.TestNormal"
          classpathref="kiama.classpath">
    </java>
  </target>
  
  <target name="uniplate" depends="build">
    <java classname="kiama.example.Uniplate"
          classpathref="kiama.classpath">
    </java>
  </target>
  
</project>
